{"version":3,"sources":["components/SearchBar.js","tools/PicturesApi.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Button.js","components/Loader.js","components/Modal.js","App.js","index.js"],"names":["StyledSearchBar","styled","header","StyledSearchForm","form","StyledSearchFormButton","button","StyledSearchFormButtonLabel","span","StyledSearchFormItem","input","SearchBar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","type","onChange","placeholder","Component","fetchPicturesWithQuery","searchQuery","page","axios","get","then","response","data","hits","StyledImageGalleryItem","li","StyledImageGalleryItemImage","img","ImageGalleryItem","imageUrl","id","onClick","src","alt","StyledImageGallery","ul","ImageGallery","handleClick","largeImageURL","onClose","pictures","map","webformatURL","StyledLoadMoreButton","Button","LoaderSpinner","color","height","width","style","margin","StyledOverlay","div","StyledModal","Modal","handelModalEscapeKey","code","closeModalOnOverlayClick","window","addEventListener","handleCloseClickOverlay","removeEventListener","largeImageUrl","className","AppStyled","App","isLoading","showModal","error","shouldScroll","fetchPictures","prevState","catch","finally","handleSearchFormSubmit","query","toggleModalImg","handleButton","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f40cba80.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledSearchBar = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nconst StyledSearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nconst StyledSearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst StyledSearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nconst StyledSearchFormItem = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport default class SearchBar extends Component {\n  state = { inputValue: '' };\n\n  handleChange = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.inputValue);\n    this.setState({ inputValue: '' });\n  };\n\n  render() {\n    return (\n      <StyledSearchBar>\n        <StyledSearchForm onSubmit={this.handleSubmit}>\n          <StyledSearchFormButton type=\"submit\">\n            <StyledSearchFormButtonLabel>Search</StyledSearchFormButtonLabel>\n          </StyledSearchFormButton>\n\n          <StyledSearchFormItem\n            type=\"text\"\n            value={this.state.inputValue}\n            onChange={this.handleChange}\n            placeholder=\"Search images and photos\"\n          />\n        </StyledSearchForm>\n      </StyledSearchBar>\n    );\n  }\n}\n\nSearchBar.propTypes = { onSubmit: PropTypes.func };\n","import axios from 'axios';\n\nconst fetchPicturesWithQuery = (searchQuery, page = 1) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?key=22755596-bd5bc4dc11dbf7c870dedd292&q=${searchQuery}&image_type=photo&per_page=12&page=${page}`,\n    )\n    .then(response => response.data.hits);\n};\n\nexport default fetchPicturesWithQuery;\n\n// API key: 22755596-bd5bc4dc11dbf7c870dedd292\n// https://pixabay.com/api/\n// URL-строка HTTP-запроса.\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledImageGalleryItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst StyledImageGalleryItemImage = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nconst ImageGalleryItem = ({ imageUrl, id, onClick }) => {\n  return (\n    <StyledImageGalleryItem>\n      <StyledImageGalleryItemImage\n        id={id}\n        src={imageUrl}\n        alt=\"Is not available\"\n        onClick={onClick}\n      />\n    </StyledImageGalleryItem>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  imageUrl: PropTypes.string,\n  id: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport ImageGalleryItem from './ImageGalleryItem';\n\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledImageGallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport default class ImageGallery extends Component {\n  handleClick = largeImageURL => {\n    this.props.onClose(largeImageURL);\n  };\n\n  render() {\n    const { pictures } = this.props;\n\n    return (\n      <StyledImageGallery>\n        {pictures.map(({ id, webformatURL, largeImageURL }) => (\n          <ImageGalleryItem\n            key={id}\n            id={id}\n            imageUrl={webformatURL}\n            onClick={() => this.handleClick(largeImageURL)}\n          />\n        ))}\n      </StyledImageGallery>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  pictures: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string,\n      largeImageURL: PropTypes.string,\n    }),\n  ).isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledLoadMoreButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n\nexport default class Button extends Component {\n  render() {\n    return (\n      <StyledLoadMoreButton type=\"button\" onClick={this.props.onClick}>\n        Load More\n      </StyledLoadMoreButton>\n    );\n  }\n}\n\nButton.propTypes = { onClick: PropTypes.func };\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default class LoaderSpinner extends Component {\n  render() {\n    return (\n      <Loader\n        type=\"Bars\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        style={{ margin: 'auto' }}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nconst StyledModal = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handelModalEscapeKey);\n    window.addEventListener('click', this.handleCloseClickOverlay);\n  }\n  componentDidUpdate() {\n    window.removeEventListener('keydown', this.handelModalEscapeKey);\n    window.removeEventListener('click', this.handleCloseClickOverlay);\n  }\n\n  handelModalEscapeKey = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  closeModalOnOverlayClick = () => {\n    this.props.onClose();\n  };\n\n  render() {\n    const { largeImageUrl } = this.props;\n    return (\n      <StyledOverlay\n        className=\"Overlay\"\n        onClick={this.closeModalOnOverlayClick}\n      >\n        <StyledModal className=\"Modal\">\n          <img src={largeImageUrl} alt=\"Not Available\" />\n        </StyledModal>\n      </StyledOverlay>\n    );\n  }\n}\n\nModal.propTypes = {\n  largeImageUrl: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport SearchBar from './components/SearchBar';\nimport fetchPicturesWithQuery from './tools/PicturesApi';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Loader from './components/Loader';\nimport Modal from './components/Modal';\nimport styled from 'styled-components';\n\nconst AppStyled = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\n\nexport default class App extends Component {\n  state = {\n    pictures: [],\n    isLoading: false,\n    largeImageUrl: '',\n    showModal: false,\n    page: 1,\n    searchQuery: '',\n    error: false,\n    shouldScroll: false,\n  };\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n    if (prevQuery !== nextQuery) {\n      this.fetchPictures();\n    }\n    if (this.state.shouldScroll === true) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  fetchPictures = () => {\n    const { searchQuery, page } = this.state;\n    this.setState({ isLoading: true });\n    fetchPicturesWithQuery(searchQuery, page)\n      .then(pictures =>\n        this.setState(prevState => ({\n          pictures: [...prevState.pictures, ...pictures],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error => this.setState({ error: true }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  handleSearchFormSubmit = query => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      pictures: [],\n    });\n  };\n\n  toggleModalImg = largeImageUrl => {\n    this.setState({ largeImageUrl: largeImageUrl });\n    this.setState({ shouldScroll: false });\n    this.setState({ showModal: !this.state.showModal });\n  };\n\n  handleButton = () => {\n    this.fetchPictures();\n    if (this.state.page > 1) {\n      this.setState({ shouldScroll: true });\n    }\n  };\n\n  render() {\n    const { pictures, isLoading, error, showModal, largeImageUrl } = this.state;\n\n    return (\n      <AppStyled>\n        {error && <p>Whoops, something went wrong</p>}\n        <SearchBar onSubmit={this.handleSearchFormSubmit}></SearchBar>\n        {pictures.length > 0 && (\n          <ImageGallery\n            pictures={pictures}\n            onClose={this.toggleModalImg}\n          ></ImageGallery>\n        )}\n        {showModal && (\n          <Modal onClose={this.toggleModalImg} largeImageUrl={largeImageUrl} />\n        )}\n        {pictures.length > 0 && !isLoading && (\n          <Button type=\"button\" onClick={this.handleButton}></Button>\n        )}\n        {isLoading && <Loader />}\n      </AppStyled>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}